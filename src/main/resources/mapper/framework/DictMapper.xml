<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.reddoor.framework.mapper.DictMapper" >
	<resultMap id="BaseResultMap" type="com.reddoor.framework.domain.Dict" >
	  <id column="id" property="id" jdbcType="INTEGER" />
	  <result column="code" property="code" jdbcType="VARCHAR" />
	  <result column="name" property="name" jdbcType="VARCHAR" />
	  <result column="label" property="label" jdbcType="VARCHAR" />
	  <result column="value" property="value" jdbcType="VARCHAR" />
	  <result column="type" property="type" jdbcType="VARCHAR" />
	  <result column="description" property="description" jdbcType="VARCHAR" />
	  <result column="sort" property="sort" jdbcType="INTEGER" />
	  <result column="remark" property="remark" jdbcType="VARCHAR" />
	  <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
	</resultMap>
  
  	<!-- 扩展的sql -->
	<select id="findAll" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			dict
	</select>
	
	<select id="searchByCode" parameterType="string" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			dict
		WHERE
			code = #{code}
	</select>
	
	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select *
		from dict 
		where id=#{id} 
	</select>
	
	<insert id="insert" parameterType="com.reddoor.framework.domain.Dict" >
	    insert into dict (code, name, label, value, type, sort, description)
	    values ( #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
	      #{type,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR})
  	</insert>
  	
  	<update id="update" parameterType="com.reddoor.framework.domain.Dict" >
	    update dict
	    set code = #{code,jdbcType=VARCHAR},
	      name = #{name,jdbcType=VARCHAR},
	      label = #{label,jdbcType=VARCHAR},
	      value = #{value,jdbcType=VARCHAR},
	      type = #{type,jdbcType=VARCHAR},
	      sort = #{sort,jdbcType=INTEGER},
	      description = #{description,jdbcType=VARCHAR}
	    where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<delete id="delete" parameterType="java.lang.Integer" >
	    delete from dict
	    where id = #{id}
	</delete>
	
</mapper>